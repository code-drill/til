<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Today I Learned (Posts about windows)</title><link>https://til.code-drill.eu/</link><description></description><atom:link href="https://til.code-drill.eu/categories/windows.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2025 &lt;a href="mailto:michal@code-drill.eu"&gt;Michał Rutkowski&lt;/a&gt; </copyright><lastBuildDate>Sat, 12 Jul 2025 20:24:50 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>how use multiple ssh keys with github</title><link>https://til.code-drill.eu/posts/2025-07-06/how-use-multiple-ssh-keys-with-git/</link><dc:creator>Michał Rutkowski</dc:creator><description>&lt;p&gt;Assuming that you have already configured one key to access GitHub
using SSH.&lt;/p&gt;
&lt;h3 id="step-1-create-additional-ssh-key"&gt;Step 1: Create Additional SSH
Key&lt;/h3&gt;
&lt;p&gt;Put an additional key in the SSH config directory, e.g.:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Windows:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;%USERPROFILE%/.ssh/some-name/id_ed25519&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Linux/macOS:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;~/.ssh/some-name/id_ed25519&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="step-2-configure-ssh-config"&gt;Step 2: Configure SSH Config&lt;/h3&gt;
&lt;p&gt;Now you need to edit (or create) SSH config under:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Windows:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;%USERPROFILE%/.ssh/config&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Linux/macOS:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;~/.ssh/config&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Add additional config:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Host github-some-new-label
    HostName github.com
    User git
    IdentityFile c:\Users\USERNAME\.ssh\some-name\id_ed25519
    IdentitiesOnly yes&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="caution"&gt;Caution&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;IdentityFile&lt;/code&gt; - must be full path to SSH key&lt;/p&gt;
&lt;h3 id="notice"&gt;Notice&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;IdentitiesOnly yes&lt;/code&gt; is a crucial SSH configuration option
that tells SSH to only use the specific key file you’ve specified and
ignore all other keys.&lt;/p&gt;
&lt;h4 id="without-identitiesonly-yes"&gt;Without
&lt;code&gt;IdentitiesOnly yes&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;SSH tries multiple keys in this order&lt;/p&gt;
&lt;ol type="1"&gt;
&lt;li&gt;Keys loaded in SSH agent&lt;/li&gt;
&lt;li&gt;Default keys (&lt;code&gt;~/.ssh/id_rsa&lt;/code&gt;,
&lt;code&gt;~/.ssh/id_ed25519&lt;/code&gt;, etc)&lt;/li&gt;
&lt;li&gt;Your specified key file&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;GitHub sees the first key that works and authenticates with that
account&lt;/p&gt;
&lt;h4 id="with-identitiesonly-yes"&gt;With
&lt;code&gt;IdentitiesOnly yes&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;SSH only uses the exact key file you specified&lt;/li&gt;
&lt;li&gt;It ignores SSH agent keys and default keys&lt;/li&gt;
&lt;li&gt;GitHub only sees your intended key&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="step-3-configure-repository"&gt;Step 3: Configure Repository&lt;/h3&gt;
&lt;p&gt;Go to repo that should use new key.&lt;/p&gt;
&lt;p&gt;Optionally set new git username and git email for given repo:&lt;/p&gt;
&lt;pre class="shell"&gt;&lt;code&gt;git config user.name "git username"
git config user.email "your.email@example.com"&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Update remote to use new GitHub config:&lt;/p&gt;
&lt;pre class="shell"&gt;&lt;code&gt;git remote set-url origin git@github-some-new-label:github-user/project1.git&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Where: - &lt;code&gt;github-some-new-label&lt;/code&gt; - is the same as label
after &lt;code&gt;Host&lt;/code&gt; in &lt;code&gt;.ssh/config&lt;/code&gt; -&amp;gt;
&lt;code&gt;Host github-some-new-label&lt;/code&gt; - &lt;code&gt;github-user&lt;/code&gt; is
GitHub user of appropriate repo; i.e., if https url is
&lt;code&gt;https://github.com/code-drill/django-app-template.git&lt;/code&gt; -&amp;gt;
then ssh link will be:
&lt;code&gt;git@github-code-drill:code-drill/django-app-template.git&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id="step-4-test-configuration"&gt;Step 4: Test Configuration&lt;/h3&gt;
&lt;p&gt;Test the SSH connection:&lt;/p&gt;
&lt;pre class="shell"&gt;&lt;code&gt;ssh -T git@github-some-new-label&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You should see:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Hi username! You've successfully authenticated, but GitHub does not provide shell access.&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="step-5-push-changes"&gt;Step 5: Push Changes&lt;/h3&gt;
&lt;p&gt;Now you can push using the correct SSH key:&lt;/p&gt;
&lt;pre class="shell"&gt;&lt;code&gt;git push origin main&lt;/code&gt;&lt;/pre&gt;</description><category>git</category><category>github</category><category>ssh</category><category>win</category><category>windows</category><guid>https://til.code-drill.eu/posts/2025-07-06/how-use-multiple-ssh-keys-with-git/</guid><pubDate>Sun, 06 Jul 2025 15:15:20 GMT</pubDate></item><item><title>Gitignore windows cmd util</title><link>https://til.code-drill.eu/posts/2025-06-22/gitignore-windows-cmd-util/</link><dc:creator>Michał Rutkowski</dc:creator><description>&lt;p&gt;Simple utility that lets you generate .gitignore using cmd/shell. You
must have curl in your path.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;windows/cmd: &lt;code&gt;gitignore.cmd&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="cmd"&gt;&lt;code&gt;@echo off
curl -sL https://www.toptal.com/developers/gitignore/api/%*&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;linux - add function into your aliases file or .*rc
&lt;ul&gt;
&lt;li&gt;function for alias&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="shell"&gt;&lt;code&gt;function gitignore() { curl -sL https://www.toptal.com/developers/gitignore/api/\$@ ;}&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;zsh - code to run to add function to &lt;code&gt;.zshrc&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="shell"&gt;&lt;code&gt;echo "function gitignore() { curl -sL https://www.toptal.com/developers/gitignore/api/\$@ ;}" &amp;gt;&amp;gt; ~/.zshrc&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;bash - code to run to add function to &lt;code&gt;.bash&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="shell"&gt;&lt;code&gt;echo "function gitignore() { curl -sL https://www.toptal.com/developers/gitignore/api/\$@ ;}" &amp;gt;&amp;gt; ~/.bashrc&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;and than you can type:&lt;/p&gt;
&lt;pre class="shell"&gt;&lt;code&gt;gitignore python,pycharm,django&lt;/code&gt;&lt;/pre&gt;</description><category>bash</category><category>cmd</category><category>command-line</category><category>git</category><category>gitignore</category><category>linux</category><category>windows</category><category>zsh</category><guid>https://til.code-drill.eu/posts/2025-06-22/gitignore-windows-cmd-util/</guid><pubDate>Sun, 22 Jun 2025 11:47:35 GMT</pubDate></item></channel></rss>